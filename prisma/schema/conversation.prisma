model Conversation {
  id         String    @id @default(cuid())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  senderName String
  model      Model     @relation(fields: [modelId], references: [id])
  modelId    String
  messages   Message[]

  @@index([modelId])
}

model Message {
  id              String       @id @default(cuid())
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  actualtSendTime DateTime     @default(now())
  type            MessageType
  content         String
  conversation    Conversation @relation(fields: [conversationId], references: [id])
  conversationId  String

  @@index([conversationId])
}

enum MessageType {
  text
  picture
}

model ModelSamplePicture {
  id                 String         @id @default(cuid())
  createdAt          DateTime       @default(now())
  updatedAt          DateTime       @updatedAt
  framing            PictureFraming @relation(fields: [pictureFramingName], references: [name])
  exposedPart        BodyPart       @relation(fields: [bodyPartName], references: [name])
  vaginaColor        VaginaColor    @relation(fields: [vaginaColorName], references: [name])
  vaginaColorName    String
  bodyPartName       String
  pictureFramingName String

  @@index([vaginaColorName])
  @@index([bodyPartName])
  @@index([pictureFramingName])
}

model PictureFromSender {
  id                    Int   @id @default(autoincrement())
  verySuggestiveScore   Float
  suggestiveScore       Float
  mildlySuggestiveScore Float
}

model BodyPart {
  id                 Int                  @id @default(autoincrement())
  name               String               @unique
  modelSamplePicture ModelSamplePicture[]
}

model PictureFraming {
  id                 Int                  @id @default(autoincrement())
  name               String               @unique
  modelSamplePicture ModelSamplePicture[]
}

model VaginaColor {
  id                 Int                  @id @default(autoincrement())
  name               String               @unique
  modelSamplePicture ModelSamplePicture[]
}
