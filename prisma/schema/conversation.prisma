model Conversation {
  id             String    @id @default(cuid())
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  senderUserName String    @unique
  model          Model     @relation(fields: [modelId], references: [id])
  modelId        String
  messages       Message[]

  @@index([modelId])
}

model Message {
  id                   String              @id @default(cuid())
  createdAt            DateTime            @default(now())
  updatedAt            DateTime            @updatedAt
  actualtSendTime      DateTime            @default(now())
  messageIndex         Int
  senderRole           Role
  type                 MessageType
  text                 String?
  pictureFromSender    PictureFromSender?  @relation(fields: [pictureFromSenderUrl], references: [url])
  pictureFromSenderUrl String?
  pictureFromModel     ModelSamplePicture? @relation(fields: [pictureFromModelUrl], references: [url])
  pictureFromModelUrl  String?
  conversation         Conversation        @relation(fields: [conversationId], references: [id])
  conversationId       String

  @@index([pictureFromModelUrl])
  @@index([pictureFromSenderUrl])
  @@index([conversationId])
}

enum Role {
  user
  assistant
}

model PictureFromSender {
  id                    String    @id @default(cuid())
  url                   String    @unique
  verySuggestiveScore   Float
  suggestiveScore       Float
  mildlySuggestiveScore Float
  Message               Message[]
}

enum MessageType {
  text
  picture
}
